{"version":3,"file":"page-legacy-CsRjeJS8.js","sources":["../../src/pages/blog/page.tsx","../../node_modules/.pnpm/@tanstack+react-query@5.66.0_react@18.3.1/node_modules/@tanstack/react-query/build/modern/useQuery.js","../../node_modules/.pnpm/@tanstack+react-query@5.66.0_react@18.3.1/node_modules/@tanstack/react-query/build/modern/useBaseQuery.js","../../node_modules/.pnpm/@tanstack+query-core@5.66.0/node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../node_modules/.pnpm/@tanstack+react-query@5.66.0_react@18.3.1/node_modules/@tanstack/react-query/build/modern/isRestoring.js","../../node_modules/.pnpm/@tanstack+react-query@5.66.0_react@18.3.1/node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","../../node_modules/.pnpm/@tanstack+react-query@5.66.0_react@18.3.1/node_modules/@tanstack/react-query/build/modern/utils.js","../../node_modules/.pnpm/@tanstack+react-query@5.66.0_react@18.3.1/node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js","../../node_modules/.pnpm/@tanstack+react-query@5.66.0_react@18.3.1/node_modules/@tanstack/react-query/build/modern/suspense.js","../../src/pages/blog/page.styles.tsx","../../src/components/animation/AnimationLoadingDots.tsx","../../src/utils/datetime.ts"],"sourcesContent":["// react\r\nimport { useCallback } from \"react\";\r\n// useQuery\r\nimport { useQuery } from \"@tanstack/react-query\";\r\n// components\r\nimport { RootStyle, Wrapper, PostBox, Link, PostIndexBadge, PostTitle, PostDate } from \"@pages/blog/page.styles\";\r\nimport { ColumnFlex, RowFlex } from \"@components/common/FlexBox\";\r\nimport AnimationLoadingDots from \"@components/animation/AnimationLoadingDots\";\r\n// utils\r\nimport { getFormattedUTCtoKST } from \"@utils/datetime\";\r\n// types\r\nimport { BlogPostType } from \"@pages/blog/types/BlogPostType\";\r\n// env\r\nconst BLOG_API_URL = import.meta.env.VITE_BLOG_API_URL;\r\nconst BLOG_API_AUTH_USERNAME = import.meta.env.VITE_BLOG_API_USERNAME;\r\nconst BLOG_API_KEY = import.meta.env.VITE_BLOG_API_KEY;\r\n\r\nexport default function BlogPostPage() {\r\n    const { data, isLoading, isFetching } = useQuery({\r\n        initialData: [],\r\n        queryKey: [\"blog_posts\"],\r\n        queryFn: () => getBlogPosts(),\r\n        refetchOnWindowFocus: false\r\n    });\r\n\r\n    const getBlogPosts = useCallback(async() => {\r\n        const response = await fetch((`${BLOG_API_URL}/api/articles?username=${BLOG_API_AUTH_USERNAME}&api_key=${BLOG_API_KEY}`));\r\n        return await response.json();\r\n    }, []);\r\n\r\n    const loading = (isLoading && isFetching);\r\n\r\n    const getFormattedIndex = useCallback((idx: number) => {\r\n        if (idx < 10) {\r\n            return `0${idx}`;\r\n\r\n        } else {\r\n            return idx;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <RootStyle>\r\n            <h1>\r\n                블로그\r\n            </h1>\r\n            {loading ? (\r\n                <ColumnFlex>\r\n                    <AnimationLoadingDots />\r\n                    <p>\r\n                        게시글을 불러오고 있어요.\r\n                    </p>\r\n                </ColumnFlex>\r\n            ) : (\r\n                <Wrapper>\r\n                    {data.map((post: BlogPostType, idx: number) => (\r\n                        <PostBox\r\n                            key={post.id}\r\n                        >\r\n                            <Link\r\n                                href={post.url}\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer noopener\"\r\n                            >\r\n                                <RowFlex\r\n                                    alignItems=\"center\"\r\n                                    gap={20}\r\n                                >\r\n                                    <PostIndexBadge>\r\n                                        {getFormattedIndex(idx + 1)}\r\n                                    </PostIndexBadge>\r\n\r\n                                    <PostTitle>\r\n                                        {post.title}\r\n                                    </PostTitle>\r\n                                    \r\n                                    <PostDate>\r\n                                        {getFormattedUTCtoKST(post.created_at)}\r\n                                    </PostDate>\r\n                                </RowFlex>\r\n                            </Link>\r\n                        </PostBox>\r\n                    ))}\r\n                </Wrapper>\r\n            )}\r\n        </RootStyle>\r\n    )\r\n}","\"use client\";\n\n// src/useQuery.ts\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useQuery(options, queryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient);\n}\nexport {\n  useQuery\n};\n//# sourceMappingURL=useQuery.js.map","\"use client\";\n\n// src/useBaseQuery.ts\nimport * as React from \"react\";\nimport { isServer, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.js\";\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n} from \"./errorBoundaryUtils.js\";\nimport { useIsRestoring } from \"./isRestoring.js\";\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n} from \"./suspense.js\";\nimport { noop } from \"./utils.js\";\nfunction useBaseQuery(options, Observer, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'\n      );\n    }\n  }\n  const client = useQueryClient(queryClient);\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = client.defaultQueryOptions(options);\n  client.getDefaultOptions().queries?._experimental_beforeQuery?.(\n    defaultedOptions\n  );\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  ensureSuspenseTimers(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n  const [observer] = React.useState(\n    () => new Observer(\n      client,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  const shouldSubscribe = !isRestoring && options.subscribed !== false;\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe ? observer.subscribe(notifyManager.batchCalls(onStoreChange)) : noop;\n        observer.updateResult();\n        return unsubscribe;\n      },\n      [observer, shouldSubscribe]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions, { listeners: false });\n  }, [defaultedOptions, observer]);\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  }\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    throwOnError: defaultedOptions.throwOnError,\n    query: client.getQueryCache().get(defaultedOptions.queryHash),\n    suspense: defaultedOptions.suspense\n  })) {\n    throw result.error;\n  }\n  ;\n  client.getDefaultOptions().queries?._experimental_afterQuery?.(\n    defaultedOptions,\n    result\n  );\n  if (defaultedOptions.experimental_prefetchInRender && !isServer && willFetch(result, isRestoring)) {\n    const promise = isNewCacheEntry ? (\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n    ) : (\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n    );\n    promise?.catch(noop).finally(() => {\n      observer.updateResult();\n    });\n  }\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\nexport {\n  useBaseQuery\n};\n//# sourceMappingURL=useBaseQuery.js.map","// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    if (!this.options.experimental_prefetchInRender) {\n      this.#currentThenable.reject(\n        new Error(\"experimental_prefetchInRender feature flag is not enabled\")\n      );\n    }\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult(notifyOptions);\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    const trackedResult = {};\n    Object.keys(result).forEach((key) => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackProp(key);\n          onPropTracked?.(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    if (options.select && newState.data !== void 0) {\n      if (prevResult && newState.data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(newState.data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    } else {\n      data = newState.data;\n    }\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n        if (options.select && placeholderData !== void 0) {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.#selectError = null;\n          } catch (selectError) {\n            this.#selectError = selectError;\n          }\n        }\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult(notifyOptions) {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const defaultNotifyOptions = {};\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    if (notifyOptions?.listeners !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n    this.#notify({ ...defaultNotifyOptions, ...notifyOptions });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false) {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","\"use client\";\n\n// src/isRestoring.ts\nimport * as React from \"react\";\nvar IsRestoringContext = React.createContext(false);\nvar useIsRestoring = () => React.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\nexport {\n  IsRestoringProvider,\n  useIsRestoring\n};\n//# sourceMappingURL=isRestoring.js.map","\"use client\";\n\n// src/QueryErrorResetBoundary.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = React.createContext(createValue());\nvar useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /* @__PURE__ */ jsx(QueryErrorResetBoundaryContext.Provider, { value, children: typeof children === \"function\" ? children(value) : children });\n};\nexport {\n  QueryErrorResetBoundary,\n  useQueryErrorResetBoundary\n};\n//# sourceMappingURL=QueryErrorResetBoundary.js.map","// src/utils.ts\nfunction shouldThrowError(throwError, params) {\n  if (typeof throwError === \"function\") {\n    return throwError(...params);\n  }\n  return !!throwError;\n}\nfunction noop() {\n}\nexport {\n  noop,\n  shouldThrowError\n};\n//# sourceMappingURL=utils.js.map","\"use client\";\n\n// src/errorBoundaryUtils.ts\nimport * as React from \"react\";\nimport { shouldThrowError } from \"./utils.js\";\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.throwOnError || options.experimental_prefetchInRender) {\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nvar getHasError = ({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && (suspense && result.data === void 0 || shouldThrowError(throwOnError, [result.error, query]));\n};\nexport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n};\n//# sourceMappingURL=errorBoundaryUtils.js.map","// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureSuspenseTimers = (defaultedOptions) => {\n  const originalStaleTime = defaultedOptions.staleTime;\n  if (defaultedOptions.suspense) {\n    defaultedOptions.staleTime = typeof originalStaleTime === \"function\" ? (...args) => Math.max(originalStaleTime(...args), 1e3) : Math.max(originalStaleTime ?? 1e3, 1e3);\n    if (typeof defaultedOptions.gcTime === \"number\") {\n      defaultedOptions.gcTime = Math.max(defaultedOptions.gcTime, 1e3);\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\nexport {\n  defaultThrowOnError,\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n};\n//# sourceMappingURL=suspense.js.map","// emotion\r\nimport styled from \"@emotion/styled\";\r\n\r\nexport const RootStyle = styled.section`\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 100px 0px;\r\n`;\r\n\r\nexport const Wrapper = styled.ul`\r\n    width: 100%;\r\n    list-style-type: none;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const PostBox = styled.li`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0.625rem 0px; // 12px 0px\r\n    border-bottom: 1px solid var(--white400);\r\n    transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    :hover {\r\n        transform: scale(1.01);\r\n    }\r\n`;\r\n\r\nexport const PostIndexBadge = styled.div`\r\n    width: 40px;\r\n    height: 40px;\r\n    min-width: 40px;\r\n    min-height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: var(--font-size-small);\r\n    border-radius: var(--border-radius-md);\r\n    background-color: var(--white200);\r\n`;\r\n\r\nexport const PostTitle = styled.p`\r\n    width: 100%;\r\n    padding: 0px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n`;\r\n\r\nexport const PostDate = styled.span`\r\n    min-width: 100px;\r\n    width: 100px;\r\n    font-size: var(--font-size-small);\r\n    letter-spacing: 0;\r\n    color: var(--grey);\r\n    white-space: nowrap;\r\n`;","// emotion\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    height: 24px;\r\n    gap: 8px;\r\n`;\r\n\r\nconst Dot = styled.span<{\r\n    delay: string;\r\n}>`\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: var(--border-radius-full);\r\n    background-color: inherit;\r\n    animation: bounce 1.5s linear infinite;\r\n    animation-delay: ${({ delay }) => delay || 0};\r\n\r\n    @keyframes bounce {\r\n        0% {\r\n            margin-bottom: 0;\r\n        }\r\n        25% {\r\n            margin-bottom: 12px;\r\n            background-color: var(--pink);\r\n        }\r\n        50% {\r\n            margin-bottom: 0\r\n        }\r\n        100% {\r\n            margin-bottom: 0\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function AnimationLoadingDots() {\r\n    return (\r\n        <Wrapper>\r\n            <Dot delay=\"0s\" />\r\n            <Dot delay=\"0.3s\" />\r\n            <Dot delay=\"0.6s\" />\r\n        </Wrapper>\r\n    )\r\n}","export const getFormattedUTCtoKST = (utcTime: string) => {\r\n    const datetime = new Date(utcTime);\r\n    datetime.setHours(datetime.getHours() + 9);\r\n\r\n    const year = datetime.getFullYear();\r\n    const month = datetime.getMonth() + 1;\r\n    const day = datetime.getDay();\r\n\r\n    return `${year}년 ${month}월 ${day}일`;\r\n};"],"names":["data","isLoading","isFetching","options","initialData","queryKey","queryFn","getBlogPosts","refetchOnWindowFocus","Observer","_client$getDefaultOpt","_client$getDefaultOpt2","_client$getDefaultOpt3","_client$getDefaultOpt4","client","useQueryClient","isRestoring","useIsRestoring","errorResetBoundary","useQueryErrorResetBoundary","defaultedOptions","defaultQueryOptions","getDefaultOptions","queries","_experimental_beforeQuery","call","_optimisticResults","ensureSuspenseTimers","ensurePreventErrorBoundaryRetry","useClearResetErrorBoundary","isNewCacheEntry","getQueryCache","get","queryHash","observer","React.useState","useState","result","getOptimisticResult","shouldSubscribe","subscribed","React.useSyncExternalStore","useSyncExternalStore","React.useCallback","useCallback","onStoreChange","unsubscribe","subscribe","notifyManager","batchCalls","noop","updateResult","getCurrentResult","React.useEffect","setOptions","listeners","shouldSuspend","fetchOptimistic","getHasError","throwOnError","query","suspense","error","_experimental_afterQuery","experimental_prefetchInRender","isServer","willFetch","_client$getQueryCache","promise","catch","finally","notifyOnChangeProps","trackResult","useBaseQuery","QueryObserver","async","response","fetch","BLOG_API_URL","BLOG_API_AUTH_USERNAME","BLOG_API_KEY","json","loading","getFormattedIndex","idx","RootStyle","children","jsx","ColumnFlex","AnimationLoadingDots","Wrapper","map","post","PostBox","Link","href","url","target","rel","jsxs","RowFlex","alignItems","gap","PostIndexBadge","PostTitle","title","PostDate","getFormattedUTCtoKST","created_at","id","_client","WeakMap","_currentQuery","_currentQueryInitialState","_currentResult","_currentResultState","_currentResultOptions","_currentThenable","_selectError","_selectFn","_selectResult","_lastQueryWithDefinedData","_staleTimeoutId","_refetchIntervalId","_currentRefetchInterval","_trackedProps","_Class_brand","WeakSet","Subscribable","constructor","super","this","_classPrivateFieldInitSpec","Set","_classPrivateFieldSet","pendingThenable","_classPrivateFieldGet","reject","Error","bindMethods","refetch","bind","onSubscribe","size","addObserver","shouldFetchOnMount","_assertClassBrand","_executeFetch","_updateTimers","onUnsubscribe","hasListeners","destroy","shouldFetchOnReconnect","shouldFetchOn","refetchOnReconnect","shouldFetchOnWindowFocus","_clearStaleTimeout","_clearRefetchInterval","removeObserver","notifyOptions","prevOptions","prevQuery","enabled","resolveEnabled","_updateQuery","_defaulted","shallowEqualObjects","notify","type","mounted","shouldFetchOptionally","resolveStaleTime","staleTime","_updateStaleTimeout","nextRefetchInterval","_computeRefetchInterval","_updateRefetchInterval","build","createResult","optimisticResult","shouldAssignObserverCurrentProperties","state","onPropTracked","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","trackProp","add","getCurrentQuery","then","fetchOptions","_fetchOptions$cancelR","cancelRefetch","prevResult","prevResultState","prevResultOptions","queryInitialState","newState","isPlaceholderData","fetchOnMount","fetchOptionally","fetchState","fetchStatus","errorUpdatedAt","status","select","replaceData","selectError","placeholderData","_classPrivateFieldGet2","Date","now","isPending","isError","hasData","nextResult","isSuccess","isInitialLoading","dataUpdatedAt","failureCount","fetchFailureCount","failureReason","fetchFailureReason","errorUpdateCount","isFetched","dataUpdateCount","isFetchedAfterMount","isRefetching","isLoadingError","isPaused","isRefetchError","isStale","finalizeThenableIfPossible","thenable","resolve","recreateThenable","pending","prevThenable","value","reason","defaultNotifyOptions","shouldNotifyListeners","notifyOnChangePropsValue","includedProps","some","typedKey","has","_notify","onQueryUpdate","isValidTimeout","time","timeUntilStale","setTimeout","_ref","refetchInterval","nextInterval","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","batch","listener","retryOnMount","shouldLoadOnMount","refetchOnMount","field","isStaleByTime","IsRestoringContext","React.createContext","createContext","React.useContext","useContext","Provider","QueryErrorResetBoundaryContext","isReset","clearReset","reset","createValue","throwError","params","originalStaleTime","args","Math","max","gcTime","styled","section","_t","_","ul","_t2","a","_t3","li","_t4","div","_t5","p","_t6","span","_t7","_t8","Dot","_t9","delay","utcTime","datetime","setHours","getHours","getFullYear","getMonth","getDay"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7,8]}