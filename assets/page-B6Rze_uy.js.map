{"version":3,"file":"page-B6Rze_uy.js","sources":["../../node_modules/.pnpm/@tanstack+query-core@5.66.0/node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../node_modules/.pnpm/@tanstack+react-query@5.66.0_react@18.3.1/node_modules/@tanstack/react-query/build/modern/isRestoring.js","../../node_modules/.pnpm/@tanstack+react-query@5.66.0_react@18.3.1/node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","../../node_modules/.pnpm/@tanstack+react-query@5.66.0_react@18.3.1/node_modules/@tanstack/react-query/build/modern/utils.js","../../node_modules/.pnpm/@tanstack+react-query@5.66.0_react@18.3.1/node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js","../../node_modules/.pnpm/@tanstack+react-query@5.66.0_react@18.3.1/node_modules/@tanstack/react-query/build/modern/suspense.js","../../node_modules/.pnpm/@tanstack+react-query@5.66.0_react@18.3.1/node_modules/@tanstack/react-query/build/modern/useBaseQuery.js","../../node_modules/.pnpm/@tanstack+react-query@5.66.0_react@18.3.1/node_modules/@tanstack/react-query/build/modern/useQuery.js","../../src/pages/blog/page.styles.tsx","../../src/components/animation/AnimationLoadingDots.tsx","../../src/utils/datetime.ts","../../src/pages/blog/page.tsx"],"sourcesContent":["// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    if (!this.options.experimental_prefetchInRender) {\n      this.#currentThenable.reject(\n        new Error(\"experimental_prefetchInRender feature flag is not enabled\")\n      );\n    }\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult(notifyOptions);\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    const trackedResult = {};\n    Object.keys(result).forEach((key) => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackProp(key);\n          onPropTracked?.(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    if (options.select && newState.data !== void 0) {\n      if (prevResult && newState.data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(newState.data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    } else {\n      data = newState.data;\n    }\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n        if (options.select && placeholderData !== void 0) {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.#selectError = null;\n          } catch (selectError) {\n            this.#selectError = selectError;\n          }\n        }\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult(notifyOptions) {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const defaultNotifyOptions = {};\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    if (notifyOptions?.listeners !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n    this.#notify({ ...defaultNotifyOptions, ...notifyOptions });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false) {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","\"use client\";\n\n// src/isRestoring.ts\nimport * as React from \"react\";\nvar IsRestoringContext = React.createContext(false);\nvar useIsRestoring = () => React.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\nexport {\n  IsRestoringProvider,\n  useIsRestoring\n};\n//# sourceMappingURL=isRestoring.js.map","\"use client\";\n\n// src/QueryErrorResetBoundary.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = React.createContext(createValue());\nvar useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /* @__PURE__ */ jsx(QueryErrorResetBoundaryContext.Provider, { value, children: typeof children === \"function\" ? children(value) : children });\n};\nexport {\n  QueryErrorResetBoundary,\n  useQueryErrorResetBoundary\n};\n//# sourceMappingURL=QueryErrorResetBoundary.js.map","// src/utils.ts\nfunction shouldThrowError(throwError, params) {\n  if (typeof throwError === \"function\") {\n    return throwError(...params);\n  }\n  return !!throwError;\n}\nfunction noop() {\n}\nexport {\n  noop,\n  shouldThrowError\n};\n//# sourceMappingURL=utils.js.map","\"use client\";\n\n// src/errorBoundaryUtils.ts\nimport * as React from \"react\";\nimport { shouldThrowError } from \"./utils.js\";\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.throwOnError || options.experimental_prefetchInRender) {\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nvar getHasError = ({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && (suspense && result.data === void 0 || shouldThrowError(throwOnError, [result.error, query]));\n};\nexport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n};\n//# sourceMappingURL=errorBoundaryUtils.js.map","// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureSuspenseTimers = (defaultedOptions) => {\n  const originalStaleTime = defaultedOptions.staleTime;\n  if (defaultedOptions.suspense) {\n    defaultedOptions.staleTime = typeof originalStaleTime === \"function\" ? (...args) => Math.max(originalStaleTime(...args), 1e3) : Math.max(originalStaleTime ?? 1e3, 1e3);\n    if (typeof defaultedOptions.gcTime === \"number\") {\n      defaultedOptions.gcTime = Math.max(defaultedOptions.gcTime, 1e3);\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\nexport {\n  defaultThrowOnError,\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n};\n//# sourceMappingURL=suspense.js.map","\"use client\";\n\n// src/useBaseQuery.ts\nimport * as React from \"react\";\nimport { isServer, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.js\";\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n} from \"./errorBoundaryUtils.js\";\nimport { useIsRestoring } from \"./isRestoring.js\";\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n} from \"./suspense.js\";\nimport { noop } from \"./utils.js\";\nfunction useBaseQuery(options, Observer, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'\n      );\n    }\n  }\n  const client = useQueryClient(queryClient);\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = client.defaultQueryOptions(options);\n  client.getDefaultOptions().queries?._experimental_beforeQuery?.(\n    defaultedOptions\n  );\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  ensureSuspenseTimers(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n  const [observer] = React.useState(\n    () => new Observer(\n      client,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  const shouldSubscribe = !isRestoring && options.subscribed !== false;\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe ? observer.subscribe(notifyManager.batchCalls(onStoreChange)) : noop;\n        observer.updateResult();\n        return unsubscribe;\n      },\n      [observer, shouldSubscribe]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions, { listeners: false });\n  }, [defaultedOptions, observer]);\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  }\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    throwOnError: defaultedOptions.throwOnError,\n    query: client.getQueryCache().get(defaultedOptions.queryHash),\n    suspense: defaultedOptions.suspense\n  })) {\n    throw result.error;\n  }\n  ;\n  client.getDefaultOptions().queries?._experimental_afterQuery?.(\n    defaultedOptions,\n    result\n  );\n  if (defaultedOptions.experimental_prefetchInRender && !isServer && willFetch(result, isRestoring)) {\n    const promise = isNewCacheEntry ? (\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n    ) : (\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n    );\n    promise?.catch(noop).finally(() => {\n      observer.updateResult();\n    });\n  }\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\nexport {\n  useBaseQuery\n};\n//# sourceMappingURL=useBaseQuery.js.map","\"use client\";\n\n// src/useQuery.ts\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useQuery(options, queryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient);\n}\nexport {\n  useQuery\n};\n//# sourceMappingURL=useQuery.js.map","// emotion\r\nimport styled from \"@emotion/styled\";\r\n\r\nexport const RootStyle = styled.section`\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 100px 0px;\r\n`;\r\n\r\nexport const Wrapper = styled.ul`\r\n    width: 100%;\r\n    list-style-type: none;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const PostBox = styled.li`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0.625rem 0px; // 12px 0px\r\n    border-bottom: 1px solid var(--white400);\r\n    transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    :hover {\r\n        transform: scale(1.01);\r\n    }\r\n`;\r\n\r\nexport const PostIndexBadge = styled.div`\r\n    width: 40px;\r\n    height: 40px;\r\n    min-width: 40px;\r\n    min-height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: var(--font-size-small);\r\n    border-radius: var(--border-radius-md);\r\n    background-color: var(--white200);\r\n`;\r\n\r\nexport const PostTitle = styled.p`\r\n    width: 100%;\r\n    padding: 0px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n`;\r\n\r\nexport const PostDate = styled.span`\r\n    min-width: 100px;\r\n    width: 100px;\r\n    font-size: var(--font-size-small);\r\n    letter-spacing: 0;\r\n    color: var(--grey);\r\n    white-space: nowrap;\r\n`;","// emotion\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    height: 24px;\r\n    gap: 8px;\r\n`;\r\n\r\nconst Dot = styled.span<{\r\n    delay: string;\r\n}>`\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: var(--border-radius-full);\r\n    background-color: inherit;\r\n    animation: bounce 1.5s linear infinite;\r\n    animation-delay: ${({ delay }) => delay || 0};\r\n\r\n    @keyframes bounce {\r\n        0% {\r\n            margin-bottom: 0;\r\n        }\r\n        25% {\r\n            margin-bottom: 12px;\r\n            background-color: var(--pink);\r\n        }\r\n        50% {\r\n            margin-bottom: 0\r\n        }\r\n        100% {\r\n            margin-bottom: 0\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function AnimationLoadingDots() {\r\n    return (\r\n        <Wrapper>\r\n            <Dot delay=\"0s\" />\r\n            <Dot delay=\"0.3s\" />\r\n            <Dot delay=\"0.6s\" />\r\n        </Wrapper>\r\n    )\r\n}","export const getFormattedUTCtoKST = (utcTime: string) => {\r\n    const datetime = new Date(utcTime);\r\n    datetime.setHours(datetime.getHours() + 9);\r\n\r\n    const year = datetime.getFullYear();\r\n    const month = datetime.getMonth() + 1;\r\n    const day = datetime.getDay();\r\n\r\n    return `${year}년 ${month}월 ${day}일`;\r\n};","// react\r\nimport { useCallback } from \"react\";\r\n// useQuery\r\nimport { useQuery } from \"@tanstack/react-query\";\r\n// components\r\nimport { RootStyle, Wrapper, PostBox, Link, PostIndexBadge, PostTitle, PostDate } from \"@pages/blog/page.styles\";\r\nimport { ColumnFlex, RowFlex } from \"@components/common/FlexBox\";\r\nimport AnimationLoadingDots from \"@components/animation/AnimationLoadingDots\";\r\n// utils\r\nimport { getFormattedUTCtoKST } from \"@utils/datetime\";\r\n// types\r\nimport { BlogPostType } from \"@pages/blog/types/BlogPostType\";\r\n// env\r\nconst BLOG_API_URL = import.meta.env.VITE_BLOG_API_URL;\r\nconst BLOG_API_AUTH_USERNAME = import.meta.env.VITE_BLOG_API_USERNAME;\r\nconst BLOG_API_KEY = import.meta.env.VITE_BLOG_API_KEY;\r\n\r\nexport default function BlogPostPage() {\r\n    const { data, isLoading, isFetching } = useQuery({\r\n        initialData: [],\r\n        queryKey: [\"blog_posts\"],\r\n        queryFn: () => getBlogPosts(),\r\n        refetchOnWindowFocus: false\r\n    });\r\n\r\n    const getBlogPosts = useCallback(async() => {\r\n        const response = await fetch((`${BLOG_API_URL}/api/articles?username=${BLOG_API_AUTH_USERNAME}&api_key=${BLOG_API_KEY}`));\r\n        return await response.json();\r\n    }, []);\r\n\r\n    const loading = (isLoading && isFetching);\r\n\r\n    const getFormattedIndex = useCallback((idx: number) => {\r\n        if (idx < 10) {\r\n            return `0${idx}`;\r\n\r\n        } else {\r\n            return idx;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <RootStyle>\r\n            <h1>\r\n                블로그\r\n            </h1>\r\n            {loading ? (\r\n                <ColumnFlex>\r\n                    <AnimationLoadingDots />\r\n                    <p>\r\n                        게시글을 불러오고 있어요.\r\n                    </p>\r\n                </ColumnFlex>\r\n            ) : (\r\n                <Wrapper>\r\n                    {data.map((post: BlogPostType, idx: number) => (\r\n                        <PostBox\r\n                            key={post.id}\r\n                        >\r\n                            <Link\r\n                                href={post.url}\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer noopener\"\r\n                            >\r\n                                <RowFlex\r\n                                    alignItems=\"center\"\r\n                                    gap={20}\r\n                                >\r\n                                    <PostIndexBadge>\r\n                                        {getFormattedIndex(idx + 1)}\r\n                                    </PostIndexBadge>\r\n\r\n                                    <PostTitle>\r\n                                        {post.title}\r\n                                    </PostTitle>\r\n                                    \r\n                                    <PostDate>\r\n                                        {getFormattedUTCtoKST(post.created_at)}\r\n                                    </PostDate>\r\n                                </RowFlex>\r\n                            </Link>\r\n                        </PostBox>\r\n                    ))}\r\n                </Wrapper>\r\n            )}\r\n        </RootStyle>\r\n    )\r\n}"],"names":["QueryObserver","_a","Subscribable","client","options","__privateAdd","_QueryObserver_instances","_client","_currentQuery","_currentQueryInitialState","_currentResult","_currentResultState","_currentResultOptions","_currentThenable","_selectError","_selectFn","_selectResult","_lastQueryWithDefinedData","_staleTimeoutId","_refetchIntervalId","_currentRefetchInterval","_trackedProps","__privateSet","pendingThenable","__privateGet","shouldFetchOnMount","__privateMethod","executeFetch_fn","updateTimers_fn","shouldFetchOn","clearStaleTimeout_fn","clearRefetchInterval_fn","notifyOptions","prevOptions","prevQuery","resolveEnabled","updateQuery_fn","shallowEqualObjects","mounted","shouldFetchOptionally","resolveStaleTime","updateStaleTimeout_fn","nextRefetchInterval","computeRefetchInterval_fn","updateRefetchInterval_fn","query","result","shouldAssignObserverCurrentProperties","onPropTracked","trackedResult","key","defaultedOptions","fetchOptions","prevResult","prevResultState","prevResultOptions","queryInitialState","state","newState","isPlaceholderData","data","fetchOnMount","fetchOptionally","fetchState","error","errorUpdatedAt","status","replaceData","selectError","placeholderData","isFetching","isPending","isError","isLoading","hasData","nextResult","isStale","finalizeThenableIfPossible","thenable","recreateThenable","pending","prevThenable","defaultNotifyOptions","shouldNotifyListeners","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","typedKey","notify_fn","promise","noop","staleTime","isServer","isValidTimeout","timeout","timeUntilStale","nextInterval","focusManager","notifyManager","listener","shouldLoadOnMount","field","value","observer","optimisticResult","IsRestoringContext","React.createContext","useIsRestoring","React.useContext","createValue","isReset","QueryErrorResetBoundaryContext","useQueryErrorResetBoundary","shouldThrowError","throwError","params","ensurePreventErrorBoundaryRetry","errorResetBoundary","useClearResetErrorBoundary","React.useEffect","getHasError","throwOnError","suspense","ensureSuspenseTimers","originalStaleTime","args","willFetch","isRestoring","shouldSuspend","fetchOptimistic","useBaseQuery","Observer","queryClient","useQueryClient","_b","isNewCacheEntry","React.useState","shouldSubscribe","React.useSyncExternalStore","React.useCallback","onStoreChange","unsubscribe","_d","_c","_e","useQuery","RootStyle","styled","__template","Wrapper","Link","PostBox","PostIndexBadge","PostTitle","PostDate","Dot","delay","AnimationLoadingDots","jsx","getFormattedUTCtoKST","utcTime","datetime","year","month","day","BLOG_API_URL","BLOG_API_AUTH_USERNAME","BLOG_API_KEY","BlogPostPage","getBlogPosts","useCallback","loading","getFormattedIndex","idx","ColumnFlex","post","jsxs","RowFlex"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}